#cloud-config
hostname: ${hostname}
preserve_hostname: False
manage_etc_hosts: localhost

# create "coder" user with passwordless sudo
users:
  - name: coder
    sudo: ALL=(ALL) NOPASSWD:ALL
    shell: /bin/bash

# set password for our users
chpasswd:
  expire: False
  users:
    - name: coder
      password: ${password}
      type: text
    - name: root
      password: ${password}
      type: text

write_files:
  - path: /tmp/format_disk.sh
    content: |
      #!/bin/bash
      # if /dev/vdb1 doesn't exist, then we go ahead and create it
      if ! stat /dev/vdb1 > /dev/null
      then
        # create a GPT partition scheme
        parted /dev/vdb mklabel gpt --script
        
        # create a primary partition that takes 100% of the disk and format it
        parted /dev/vdb mkpart primary 0% 100% --script
        mkfs.ext4 -F /dev/vdb1

        # mount /dev/vdb1 since it failed to mount at boot
        mount /dev/vdb1
      fi
    permissions: "0755"

  - path: /tmp/coder_agent.sh
    encoding: b64
    content: ${coder_agent_script}
    permissions: "0755"

  - path: /tmp/coder_agent_token
    content: ${coder_agent_token}
    permissions: "0744"

runcmd:
  - [ /tmp/format_disk.sh ]
  - [ sudo, -u, coder, CODER_AGENT_TOKEN_FILE=/tmp/coder_agent_token, /tmp/coder_agent.sh ]

mounts:
  - [ /dev/vdb1, /home, auto, "defaults,nofail" ]

# this is a workaround needed for "write_files" and "runcmd" to run on every boot
# this also allows us to define an order in which modules run
cloud_final_modules:
 - [write_files, always]
 - [scripts-user, always]